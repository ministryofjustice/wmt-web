const knex = require('../../../knex').web

module.exports = function (isT2A = false) {
  isT2A = (isT2A === true)

  // WMT0160: add new tiers
  return knex('workload_points')
    .withSchema('app')
    .first(
      'comm_tier_16_s AS commD0s',
      'comm_tier_15_s AS commD1s',
      'comm_tier_14_s AS commD2s',
      'comm_tier_13_s AS commD3s',
      'comm_tier_12_s AS commC0s',
      'comm_tier_11_s AS commC1s',
      'comm_tier_10_s AS commC2s',
      'comm_tier_9_s AS commC3s',
      'comm_tier_8_s AS commB0s',
      'comm_tier_7_s AS commB1s',
      'comm_tier_6_s AS commB2s',
      'comm_tier_5_s AS commB3s',
      'comm_tier_4_s AS commA0s',
      'comm_tier_3_s AS commA1s',
      'comm_tier_2_s AS commA2s',
      'comm_tier_1_s AS commA3s',
      'comm_tier_16 AS commD0',
      'comm_tier_15 AS commD1',
      'comm_tier_14 AS commD2',
      'comm_tier_13 AS commD3',
      'comm_tier_12 AS commC0',
      'comm_tier_11 AS commC1',
      'comm_tier_10 AS commC2',
      'comm_tier_9 AS commC3',
      'comm_tier_8 AS commB0',
      'comm_tier_7 AS commB1',
      'comm_tier_6 AS commB2',
      'comm_tier_5 AS commB3',
      'comm_tier_4 AS commA0',
      'comm_tier_3 AS commA1',
      'comm_tier_2 AS commA2',
      'comm_tier_1 AS commA3',
      'lic_tier_16_s AS licD0s',
      'lic_tier_15_s AS licD1s',
      'lic_tier_14_s AS licD2s',
      'lic_tier_13_s AS licD3s',
      'lic_tier_12_s AS licC0s',
      'lic_tier_11_s AS licC1s',
      'lic_tier_10_s AS licC2s',
      'lic_tier_9_s AS licC3s',
      'lic_tier_8_s AS licB0s',
      'lic_tier_7_s AS licB1s',
      'lic_tier_6_s AS licB2s',
      'lic_tier_5_s AS licB3s',
      'lic_tier_4_s AS licA0s',
      'lic_tier_3_s AS licA1s',
      'lic_tier_2_s AS licA2s',
      'lic_tier_1_s AS licA3s',
      'lic_tier_16 AS licD0',
      'lic_tier_15 AS licD1',
      'lic_tier_14 AS licD2',
      'lic_tier_13 AS licD3',
      'lic_tier_12 AS licC0',
      'lic_tier_11 AS licC1',
      'lic_tier_10 AS licC2',
      'lic_tier_9 AS licC3',
      'lic_tier_8 AS licB0',
      'lic_tier_7 AS licB1',
      'lic_tier_6 AS licB2',
      'lic_tier_5 AS licB3',
      'lic_tier_4 AS licA0',
      'lic_tier_3 AS licA1',
      'lic_tier_2 AS licA2',
      'lic_tier_1 AS licA3',
      'cust_tier_16_s AS cusD0s',
      'cust_tier_15_s AS cusD1s',
      'cust_tier_14_s AS cusD2s',
      'cust_tier_13_s AS cusD3s',
      'cust_tier_12_s AS cusC0s',
      'cust_tier_11_s AS cusC1s',
      'cust_tier_10_s AS cusC2s',
      'cust_tier_9_s AS cusC3s',
      'cust_tier_8_s AS cusB0s',
      'cust_tier_7_s AS cusB1s',
      'cust_tier_6_s AS cusB2s',
      'cust_tier_5_s AS cusB3s',
      'cust_tier_4_s AS cusA0s',
      'cust_tier_3_s AS cusA1s',
      'cust_tier_2_s AS cusA2s',
      'cust_tier_1_s AS cusA3s',
      'cust_tier_16 AS cusD0',
      'cust_tier_15 AS cusD1',
      'cust_tier_14 AS cusD2',
      'cust_tier_13 AS cusD3',
      'cust_tier_12 AS cusC0',
      'cust_tier_11 AS cusC1',
      'cust_tier_10 AS cusC2',
      'cust_tier_9 AS cusC3',
      'cust_tier_8 AS cusB0',
      'cust_tier_7 AS cusB1',
      'cust_tier_6 AS cusB2',
      'cust_tier_5 AS cusB3',
      'cust_tier_4 AS cusA0',
      'cust_tier_3 AS cusA1',
      'cust_tier_2 AS cusA2',
      'cust_tier_1 AS cusA3',
      'sdr AS sdr',
      'sdr_conversion AS sdrConversion',
      'parom AS parom',
      'weighting_arms_comm AS weightingArmsCommunity',
      'weighting_arms_lic AS weightingArmsLicense',
      'is_t2a AS isT2A')
    .whereNotNull('effective_from')
    .whereNull('effective_to')
    .where('is_t2a', isT2A)
}
