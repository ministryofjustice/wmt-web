version: "3"
services:
  redis:
    image: 'bitnami/redis:7.0'
    networks:
      - hmpps
    container_name: wmt-web-redis
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '6379:6379'
  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: wmt-web-hmpps-auth
    ports:
      - "9090:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/auth/health"]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0
      - DELIUS_ENABLED=true
      - DELIUS_ENDPOINT_URL=http://wiremock:8099
      - MANAGE_USERS_API_ENABLED=TRUE
      - MANAGE_USERS_API_ENDPOINT_URL=http://manage-users-wiremock:8302

  allocations-service:
    image: quay.io/hmpps/hmpps-allocations
    container_name: allocations-service
    ports:
      - "8091:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/health" ]
    environment:
      - SPRING_PROFILES_ACTIVE=dev
    depends_on:
      - "postgres"

  hmpps-workload:
    image: quay.io/hmpps/hmpps-workload:latest
    networks:
      - hmpps
    container_name: wmt-web-hmpps-workload
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ping"]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev,docker
      - DATABASE_ENDPOINT=postgres:5432
      - COMMUNITY_ENDPOINT_URL=http://wiremock:8099
      - HMPPS_TIER_ENDPOINT_URL=http://wiremock:8099
      - HMPPS_SQS_LOCALSTACK_URL=http://localstack:4566
    entrypoint: ["/bin/sh", "-c" , "sleep 10 && java -javaagent:/app/agent.jar -jar /app/app.jar"]
    depends_on:
        - "postgres"
  postgres:
    image: postgres:14
    networks:
      - hmpps
    container_name: wmt-web-hmpps-workload-postgres
    restart: always
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_PASSWORD=dev
      - POSTGRES_USER=root
  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    container_name: wiremock
    restart: always
    ports:
      - "8099:8099"
    command: ["--port","8099","--global-response-templating"]
    volumes:
      - $PWD/test/e2e/resources/wiremock:/home/wiremock:rw
  user-preference-wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    container_name: user-preferencewiremock
    restart: always
    ports:
      - "8098:8098"
    command: ["--port","8098","--global-response-templating"]
    volumes:
      - $PWD/test/e2e/resources/user-preference-wiremock:/home/wiremock:rw
  token-verify-wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    container_name: token-verify-wiremock
    restart: always
    ports:
      - "8100:8100"
    command: ["--port","8100","--global-response-templating"]
    volumes:
      - $PWD/test/e2e/resources/token-verify-wiremock:/home/wiremock:rw
  manage-users-wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    container_name: manage-users-wiremock
    restart: always
    ports:
      - "8302:8302"
    command: ["--port","8302","--global-response-templating"]
    volumes:
      - $PWD/test/e2e/resources/manage-users-wiremock:/home/wiremock:rw
  localstack:
    image: localstack/localstack:2.0.2
    networks:
      - hmpps
    container_name: wmt-web-localstack
    ports:
      - "4566:4566"
      - "4571:4571"
      - 8999:8080
    environment:
      - SERVICES=s3,sqs,sns
      - DEBUG=${DEBUG- }
      - DOCKER_HOST=unix:///var/run/docker.sock
      - DEFAULT_REGION=eu-west-2
    volumes:
      - "${TMPDIR:-/tmp/localstack}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - $PWD/test/integration/resources:/docker-entrypoint-initaws.d
networks:
  hmpps:
