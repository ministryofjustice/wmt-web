name: Integration tests

on:
  workflow_call:
    inputs:
      node_version_file:
        description: "setup-node reads Node version from here"
        required: false
        type: string
        default: ".nvmrc"

permissions:
  contents: read

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres -d postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
      localstack:
        image: localstack/localstack:latest
        ports:
          - 4566:4566
        env:
          SERVICES: s3,sqs,sns

    # ðŸ‘‡ only AWS values live here
    env:
      AWS_DEFAULT_REGION: eu-west-2
      AWS_ACCESS_KEY_ID: foobar
      AWS_SECRET_ACCESS_KEY: foobar
      LS: http://127.0.0.1:4566

      # resource names (change to suit your app)
      DASHBOARD_BUCKET: wmt-web
      SECOND_BUCKET: wmt-worker-dashboard

      S3_EXTRACT_QUEUE: s3_extract_event_queue
      AUDIT_QUEUE: audit_event_queue
      DOMAIN_QUEUE: domain_event_queue
      DOMAIN_TOPIC: domain-events

      # used for uploads below
      DASHBOARD_FILE: dashboard-file.txt
      DASHBOARD_PREFIX: generated-dashboards

    steps:
      - uses: actions/checkout@v4

      - name: Wait for services
        run: |
          for i in {1..60}; do pg_isready -h 127.0.0.1 -p 5432 -U postgres -d postgres && break; sleep 1; done
          curl -sfS --retry 20 --retry-connrefused --retry-delay 2 "$LS/_localstack/health" || exit 1

      - name: Ensure real AWS CLI + jq
        run: |
          # remove any dockerized wrapper we created earlier
          sudo rm -f /usr/local/bin/aws || true

          # jq from apt (still available)
          sudo apt-get update -y
          sudo apt-get install -y jq

          # AWS CLI v1 via pip (works fine for our commands)
          python3 -m pip install --user --upgra
